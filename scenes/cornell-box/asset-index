#include "uuids.as"

void main(ResourceIndex@ index)
{
  SceneGraphImportSettings importSettings;
  
  importSettings.materialUuids['mirror-roughness-0_0'] = mirrorRoughness_00;
  importSettings.materialUuids['mirror-roughness-0_1'] = mirrorRoughness_10;
  importSettings.materialUuids['mirror-roughness-0_2'] = mirrorRoughness_20;
  importSettings.materialUuids['mirror-roughness-0_3'] = mirrorRoughness_30;
  importSettings.materialUuids['mirror-roughness-0_4'] = mirrorRoughness_40;
  importSettings.materialUuids['leftWall'] = leftWall;
  importSettings.materialUuids['rightWall'] = rightWall;
  importSettings.materialUuids['wall'] = wall;
  importSettings.materialUuids['light'] = lightMaterial;
  
  importSettings.lightUuids['cornellBox-rectAreaLight'] = cornellBox_rectAreaLight;
  importSettings.lightUuids['cornellBox-roughness-rectAreaLight'] = cornellBox_roughness_rectAreaLight;
  importSettings.lightUuids['cornellBox-roughness-sphereAreaLight'] = cornellBox_roughness_sphereAreaLight;

  index.convertSceneGraph(sceneGraphFile: "cornell-box.scene-graph",
                          sourceFile: "cornell-box.blend",
                          settings: importSettings);

  index.convertSceneGraph(sceneGraphFile: "cornell-box-roughness.scene-graph",
                          sourceFile: "cornell-box-roughness.blend",
                          settings: importSettings);

  /*
  index.registerMaterial(uuid: leftWall,
                         material: Material::plainColor(base_color: vec3(0.631, 0.065, 0.050),
                                                        smoothness: 0.3));
  index.registerMaterial(uuid: rightWall,
                         material: Material::plainColor(base_color: vec3(0.14, 0.45, 0.091),
                                                        smoothness: 0.3));
  index.registerMaterial(uuid: wall,
                         material: Material::plainColor(base_color: vec3(0.723),
                                                        smoothness: 0.3));
  index.registerMaterial(uuid: lightMaterial,
                         material: Material::plainColor(emission: vec3(1)));
  index.registerMaterial(uuid: mirrorRoughness_00,
                         material: Material::plainColor(base_color: vec3(1),
                                                        smoothness: 1.0,
                                                        metal_mask: 1));
  index.registerMaterial(uuid: mirrorRoughness_10,
                        material: Material::plainColor(base_color: vec3(1),
                                                       smoothness: 0.9,
                                                       metal_mask: 1));
  index.registerMaterial(uuid: mirrorRoughness_20,
                        material: Material::plainColor(base_color: vec3(1),
                                                      smoothness: 0.8,
                                                      metal_mask: 1));
  index.registerMaterial(uuid: mirrorRoughness_30,
                         material: Material::plainColor(base_color: vec3(1),
                                                        smoothness: 0.7,
                                                        metal_mask: 1));
  index.registerMaterial(uuid: mirrorRoughness_40,
                         material: Material::plainColor(base_color: vec3(1),
                                                        smoothness: 0.6,
                                                        metal_mask: 1));
  */
  RectAreaLightSource rectAreaLight;
  SphereAreaLightSource sphereAreaLight;
  
  rectAreaLight.size = vec2(0.47, 0.38);
  index.registerLightSource(uuid: cornellBox_rectAreaLight,
                            light: rectAreaLight);
                            
  rectAreaLight.size = vec2(0.3);
  index.registerLightSource(uuid: cornellBox_roughness_rectAreaLight,
                            light: rectAreaLight);
  sphereAreaLight.radius = 0.1125;
  index.registerLightSource(uuid: cornellBox_roughness_sphereAreaLight,
                            light: sphereAreaLight);
}
